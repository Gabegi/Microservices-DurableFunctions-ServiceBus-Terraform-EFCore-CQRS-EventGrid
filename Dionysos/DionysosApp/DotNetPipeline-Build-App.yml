parameters:
 env: ''

jobs:
  
  - job: BuildRouter
    displayName: 'Build DotNet Code Router'

    pool:
      vmImage: 'windows-latest'

    steps:
    - task: UseDotNet@2
      displayName: 'Use DotNet 6'  
      inputs:
        packageType: 'sdk'
        version: '6.0.415'
        installationPath: $(Agent.ToolsDirectory)/dotnet  

    - task: DotNetCoreCLI@2
      displayName: 'Dotnet build Release'
      inputs:
        command: 'build'
        projects: '**/DionysosApp.csproj'
        arguments: '--configuration Release'   

    - task: DotNetCoreCLI@2
      displayName: Restore dotnet tools
      inputs:
        command: custom
        custom: tool
        arguments: restore

    - task: DotNetCoreCLI@2
      displayName: 'Dotnet publish'
      inputs:
        command: publish
        publishWebProjects: false  # If this input is set to true, the projects property value is skipped, and the task tries to find the web projects (web.config file or a wwwroot folder) in the repository and run the publish command on them
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)' ## --configuration Release or Debug, output specifies the output directory for the published files to be
        zipAfterPublish: true # If this input is set to true, folders created by the publish command will be zipped and deleted.
        projects: '**/DionysosApp.csproj' # specifies the project file to be published. It uses a wildcard pattern to find any project file with the name "DionysosRouter.csproj" in any subdirectory. This allows it to work with multiple project files if they exist.
        
    - task: PublishBuildArtifacts@1
      displayName: "Publish Artifacts"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'DionysosApp'




